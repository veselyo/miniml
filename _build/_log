### Starting build.
# Target: ocamlfind ocamlc -config, tags: {  }
ocamlfind ocamlc -config
# Target: tests.ml.depends, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), extension:ml, file:tests.ml, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamldep -package graphics -package CS51Utils -modules tests.ml > tests.ml.depends
# Target: evaluation.ml.depends, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), extension:ml, file:evaluation.ml, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamldep -package graphics -package CS51Utils -modules evaluation.ml > evaluation.ml.depends # cached
# Target: expr.mli.depends, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), extension:mli, file:expr.mli, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamldep -package graphics -package CS51Utils -modules expr.mli > expr.mli.depends # cached
# Target: expr.cmi, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:mli, file:expr.mli, interf, ocaml, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o expr.cmi expr.mli # cached
# Target: evaluation.cmo, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:evaluation.cmo, file:evaluation.ml, implem, ocaml, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o evaluation.cmo evaluation.ml # cached
# Target: tests.cmo, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:tests.cmo, file:tests.ml, implem, ocaml, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o tests.cmo tests.ml
+ ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o tests.cmo tests.ml
File "tests.ml", line 1:
Warning 70 [missing-mli]: Cannot find interface file.
# Target: expr.ml.depends, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), extension:ml, file:expr.ml, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamldep -package graphics -package CS51Utils -modules expr.ml > expr.ml.depends # cached
# Target: expr.cmo, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:expr.cmo, file:expr.ml, implem, ocaml, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o expr.cmo expr.ml # cached
# Target: tests.byte, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, dont_link_with, extension:byte, file:tests.byte, link, ocaml, program, quiet, strict-sequence, thread, traverse, use_menhir, use_str }
ocamlfind ocamlc -linkpkg str.cma -thread -package graphics -package CS51Utils expr.cmo evaluation.cmo tests.cmo -o tests.byte
# Compilation successful.
